{"version":3,"sources":["components/card.tsx","App.tsx","index.tsx"],"names":["Card","title","percents","income","className","Number","App","useState","renda","setRenda","renderAddCard","setRenderAddCard","labelButtonRenderAddCard","setLabelButtonRenderAddCard","card","setCards","inputTitle","setInputTitle","inputPercents","setInputPercents","show","setShow","renderElementAddCard","verifyPercents","totalPercents","forEach","value","console","log","id","type","name","onChange","e","target","step","min","max","map","index","key","onClick","hidden","saveCard","Modal","onHide","Header","closeButton","Body","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed4aaa3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface CardsProps {\r\n    title: string;\r\n    percents: string;\r\n    income: string;\r\n}\r\n\r\nconst Card: React.FC<CardsProps> = ({ title, percents, income }) => {\r\n    return (\r\n        <div className=\"card mt-5\">\r\n            <h5 className=\"card-header text-light bg-secondary d-flex \">\r\n                <div className=\"text-left\">\r\n                    {title}\r\n                </div>\r\n                <div className=\"text-right\">\r\n                    {percents}%\r\n                </div>\r\n            </h5>\r\n            <div className=\"card-body\">\r\n                <p>VocÃª tem que investir R$ {Number(income) * Number(percents) / 100}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-bootstrap/Modal'\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport Card from './components/card';\nimport './style.css';\n\nfunction App() {\n\n  const [renda, setRenda] = useState('0.00');\n  const [renderAddCard, setRenderAddCard] = useState(true);\n  const [renderModal, setRenderModal] = useState(false);\n  const [labelButtonRenderAddCard, setLabelButtonRenderAddCard ] = useState('+')\n  const [card, setCards] = useState([{\n    title : \"Renda Fixa\",\n    percents : \"10\"\n  }, {\n    title : \"Renda Variavel\",\n    percents : \"20\"\n  }]);\n\n  const [inputTitle , setInputTitle] = useState(\"\");\n  const [inputPercents , setInputPercents] = useState(\"\");\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n\n   function renderElementAddCard () {\n    if(renderAddCard){\n      setLabelButtonRenderAddCard('-')\n      setRenderAddCard(false);\n      setInputTitle(\"\");\n      setInputPercents(\"\");\n      }else{\n      setLabelButtonRenderAddCard('+')\n      setRenderAddCard(true);\n    }\n}\n\nfunction saveCard(inputTitle: string, inputPercents: string){\n    setCards([...card, {title: inputTitle , percents: inputPercents} ]);\n}\n\nfunction verifyPercents(inputPercents : string){\n  var totalPercents = 0;\n\n  card.forEach((value) => totalPercents += Number(value.percents));\n  totalPercents += Number(inputPercents);\n  if(totalPercents > 100){\n    setInputPercents(\"\");\n    handleShow();\n  }\n  console.log(totalPercents);\n}\n\n\n  return (\n    <div className='container mt-5' id=\"container\">\n      <h1 className='text-center mb-5'>Carteira Virtual Luquinhas</h1>\n      <form>\n        <div className=\"form-group\">\n          <div className='row justify-content-center'>\n            <div className='col- mt'>\n              <label>R$</label>\n            </div>\n            <div className='col-md-6'> \n              <input type=\"number\" name='inputValor'\n                onChange={(e) => { setRenda(e.target.value) }} step='.10' min = '0.01' max = \"9999999.99\" className=\"form-control\" id=\"inputValor\" />\n            </div>\n          </div>\n        </div>\n      </form>\n      {\n        card.map((value ,index ) => {\n            return <Card key = {index} title={value.title} income = {renda} percents = {value.percents} ></Card>\n        })\n      }\n      <div className='row mt-3 md-5 justify-content-end' >\n        <button className='button btn btn-outline-primary btn-sm' onClick={() => {renderElementAddCard()}}\n                type=\"button\">{labelButtonRenderAddCard}</button>    \n      </div>\n      <div id=\"renderAddCard\" hidden = {renderAddCard}>\n      <div className=\"card mt-3\">\n        <div className=\"card-body\">\n            <form>\n              <div className=\"row\">\n                <div className=\"col-md-10 \">\n                  <label>Nome da Caixa</label>\n                  <input id='inputTitle' className='form-control' value={inputTitle}\n                          onChange={(e) => { setInputTitle(e.target.value) }}></input>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>Porcentagem</label>\n                  <input id='inputPercents' value={inputPercents} className='form-control' type=\"number\"\n                          onChange={(e) => { setInputPercents(e.target.value); verifyPercents(e.target.value) }}\n                          ></input>\n                </div>\n              </div>\n              <div className=\"row mt-5 justify-content-end\">\n                <div className='button'>\n                    <button type=\"button\" id=\"btnSalvar\" className='btn btn-primary'\n                            onClick={() => {saveCard(inputTitle, inputPercents); renderElementAddCard(); verifyPercents(inputPercents);}} >\n                            Salvar</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div id=\"warningModel\"> \n          <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            \n          </Modal.Header >\n          <Modal.Body>O valor informado excede o total de porcentagem permitido</Modal.Body>\n          <Modal.Footer>\n\n          </Modal.Footer>\n        </Modal>\n      </div> \n    </div>\n\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}